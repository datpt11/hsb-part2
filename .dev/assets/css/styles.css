/* 0. Abstracts
======================================================================== */
/* 1. Base
======================================================================== */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

html {
  font-size: 62.5%; }

button {
  outline: none;
  border: none;
  box-shadow: none; }

.mr-15 {
  margin-right: 1.5rem; }

/* Typography */
body {
  margin: 0;
  padding: 0;
  font-weight: 400;
  font-family: "Poppins", sans-serif;
  color: #7e7fa0;
  font-size: 1.6rem; }

ul li {
  list-style: none;
  font-weight: 400; }

a {
  color: #4f4b65 !important;
  text-decoration: none; }
  a:hover {
    color: #4f4b65 !important;
    text-decoration: none; }

a {
  outline: none; }

h2 {
  font-size: 3rem;
  font-weight: 400;
  color: #2e2a41; }

h3 {
  font-size: 2rem;
  font-weight: 600;
  color: #2e2a41; }

h5 {
  font-weight: 700;
  color: #2e2a41;
  font-size: 1.5rem; }

h6 {
  font-weight: 700;
  color: #2e2a41;
  font-size: 1.4rem; }

h4 {
  font-size: 1.8rem;
  color: #2e2a41;
  font-weight: 600; }

section {
  padding-top: 8rem;
  position: relative; }

/* 2. Components
======================================================================== */
.background {
  background-color: #fcf3ec;
  position: absolute;
  z-index: -99999; }

.background--left {
  bottom: 0;
  left: 0;
  height: 75%;
  width: 40%;
  background-color: #f0f9fe;
  border-radius: 0 4rem 4rem 0; }
  @media (max-width: 767px) {
    .background--left {
      width: 100%; } }

.background--right {
  bottom: 0;
  right: 0;
  height: 75%;
  width: 40%;
  background-color: #f0f9fe;
  border-radius: 4rem 0 0 4rem; }
  @media (max-width: 767px) {
    .background--right {
      width: 100%; } }

.background--full {
  top: 0;
  right: 2rem;
  bottom: 0;
  left: 2rem;
  height: 100%;
  background-color: #fcf3ec;
  border-radius: 4rem; }

.button {
  cursor: pointer;
  border-radius: 1rem;
  border: none;
  font-size: 1.6rem;
  padding: 1.2rem;
  font-weight: 700;
  color: #fff; }

.btn--primary {
  background-color: #616ae8; }

.btn--success {
  background-color: #20e5a7; }

.carousel {
  padding-bottom: 9rem; }

.circle {
  width: 7.9rem;
  height: 7.9rem;
  border-radius: 50%; }

.circle--absolute {
  position: absolute;
  top: -3rem;
  left: -4rem;
  z-index: -321321; }
  @media (max-width: 767px) {
    .circle--absolute {
      top: 1.5rem;
      left: -1.5rem; } }

.circle--big {
  width: 9.2rem;
  height: 9.2rem;
  border-radius: 50%; }

.circle--pink-2 {
  background-color: #fdf1e7; }

.circle--pink-3 {
  background-color: #fbe9e9; }

.circle--blue-2 {
  background-color: #e7faf9; }

.circle--grey {
  background-color: #f5ecfd; }

.circle--charcoal-purple {
  background-color: #e7effb; }

.circle--opacity {
  opacity: 0.2; }

.circle--orange {
  background-color: #fd9b9b; }

.circle--violet-1 {
  background-color: #b06bf1; }

.circle--skyblue-1 {
  background-color: #45ccdb; }

.circle--blue-1 {
  background-color: #545cf0; }

.circle--pink-1 {
  background-color: #f16bac; }

.circle--green-1 {
  background-color: #48de57; }

section#features {
  margin-top: 3rem;
  padding-bottom: 8rem; }

.features {
  padding: 3rem;
  background-color: #fff;
  border-radius: 2rem; }
  .features .features__title {
    margin-top: 3rem; }
  .features .features__desc {
    font-size: 1.5rem;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    /* number of lines to show */
    -webkit-box-orient: vertical; }

.heading {
  margin-bottom: 10rem; }

.heading__title--bold {
  font-weight: 700; }

.heading__title--primary {
  color: #5e68f9; }

.heading__desc {
  max-width: 60rem;
  margin: 0 auto; }

.icon {
  position: relative; }

.icon--right {
  position: absolute;
  top: 0;
  left: 2rem; }

.icon--center {
  position: absolute;
  top: 30%;
  left: 7.5%; }

.las {
  font-size: 10rem;
  color: #5e68f9; }

.label {
  padding: 0.3rem 1.5rem;
  color: #fff;
  font-weight: 700;
  background-color: #5e68f9;
  position: absolute;
  left: 0;
  bottom: -0.7rem; }
  .label::after {
    content: "";
    position: absolute;
    left: 8.6rem;
    bottom: 0.7rem;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 2.3rem 0 0 1.2rem;
    border-color: transparent transparent transparent #0363c9; }

.menu {
  padding: 2.2rem 4rem;
  display: flex;
  justify-content: space-between; }

.menu__list {
  display: flex;
  justify-content: center;
  align-self: center; }
  @media (max-width: 767px) {
    .menu__list {
      display: none; } }

.menu__item {
  padding: 0.5rem 3.65rem; }

.post {
  border-radius: 0.6rem;
  box-shadow: 0 0.4rem 1.4rem rgba(0, 0, 0, 0.1); }
  .post .post__title {
    margin-top: 1.33rem;
    padding: 0 1.5rem; }
  .post .post__desc {
    padding: 0 1.5rem 1rem; }

.post__image {
  position: relative;
  padding-top: 56.33423%; }
  .post__image img {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 100%; }

.quote {
  padding: 5rem; }
  .quote .quote__desc {
    margin: 2.5rem 0; }
  .quote .quote__author {
    position: relative; }
    .quote .quote__author h6 {
      margin-left: 2.5rem; }
  .quote .quote__author::after {
    content: "";
    position: absolute;
    border-top: 2px solid #d8d8d8;
    width: 2rem;
    top: 0.8rem; }

@media (max-width: 767px) {
  .services {
    padding: 2rem; } }

.services .services__title {
  margin: 2.6rem 0 2.9rem; }

.services .services__desc {
  font-size: 1.5rem; }

.services--relative {
  position: relative; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
